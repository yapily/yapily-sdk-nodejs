/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiResponseError from '../model/ApiResponseError';
import ApiResponseOfFinancialProfile from '../model/ApiResponseOfFinancialProfile';
import ApiResponseOfFinancialProfileAuthorisationResponse from '../model/ApiResponseOfFinancialProfileAuthorisationResponse';
import ApiResponseOfFinancialProfileBalancePrediction from '../model/ApiResponseOfFinancialProfileBalancePrediction';
import ApiResponseOfFinancialProfileConsent from '../model/ApiResponseOfFinancialProfileConsent';
import ApiResponseOfFinancialProfileConsentRemoveResponse from '../model/ApiResponseOfFinancialProfileConsentRemoveResponse';

/**
* FinancialProfile service.
* @module api/FinancialProfileApi
* @version 2.13.1
*/
export default class FinancialProfileApi {

    /**
    * Constructs a new FinancialProfileApi. 
    * @alias module:api/FinancialProfileApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createProfileConsent operation.
     * @callback module:api/FinancialProfileApi~createProfileConsentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiResponseOfFinancialProfileAuthorisationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Profile Consent
     * Used to add a consent to a `Financial Profile` for a `User`.  The response is asynchronous, returned with pending status, while retrieval of financial data is commenced.  There is a limit of 10,000 transactions for enrichment.
     * @param {String} userUuid __Mandatory__. The Yapily generated UUID for the user.
     * @param {String} consent __Mandatory__. The `consent-token` obtained from the original authorisation.
     * @param {module:api/FinancialProfileApi~createProfileConsentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiResponseOfFinancialProfileAuthorisationResponse}
     */
    createProfileConsent(userUuid, consent, callback) {
      let postBody = null;
      // verify the required parameter 'userUuid' is set
      if (userUuid === undefined || userUuid === null) {
        throw new Error("Missing the required parameter 'userUuid' when calling createProfileConsent");
      }
      // verify the required parameter 'consent' is set
      if (consent === undefined || consent === null) {
        throw new Error("Missing the required parameter 'consent' when calling createProfileConsent");
      }

      let pathParams = {
        'userUuid': userUuid
      };
      let queryParams = {
      };
      let headerParams = {
        'consent': consent
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiResponseOfFinancialProfileAuthorisationResponse;
      return this.apiClient.callApi(
        '/users/{userUuid}/profile/consents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteProfileConsent operation.
     * @callback module:api/FinancialProfileApi~deleteProfileConsentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiResponseOfFinancialProfileConsentRemoveResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Profile Consent
     * Used to delete a `ProfileConsent` for a `User`. This will remove the consent and all associated financial data from the 'Financial Profile'.
     * @param {String} userUuid __Mandatory__. The Yapily generated UUID for the user.
     * @param {String} profileConsentId __Mandatory__. The ID of the ProfileConsent
     * @param {module:api/FinancialProfileApi~deleteProfileConsentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiResponseOfFinancialProfileConsentRemoveResponse}
     */
    deleteProfileConsent(userUuid, profileConsentId, callback) {
      let postBody = null;
      // verify the required parameter 'userUuid' is set
      if (userUuid === undefined || userUuid === null) {
        throw new Error("Missing the required parameter 'userUuid' when calling deleteProfileConsent");
      }
      // verify the required parameter 'profileConsentId' is set
      if (profileConsentId === undefined || profileConsentId === null) {
        throw new Error("Missing the required parameter 'profileConsentId' when calling deleteProfileConsent");
      }

      let pathParams = {
        'userUuid': userUuid,
        'profileConsentId': profileConsentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiResponseOfFinancialProfileConsentRemoveResponse;
      return this.apiClient.callApi(
        '/users/{userUuid}/profile/consents/{profileConsentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBalancePrediction operation.
     * @callback module:api/FinancialProfileApi~getBalancePredictionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiResponseOfFinancialProfileBalancePrediction} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Predicted Balances
     * Used to retrieve a `Balance Prediction Profile` for a `User`.  Status will be `PENDING` until all ProfileConsents are `COMPLETED`.
     * @param {String} userUuid __Mandatory__. The Yapily generated UUID for the user.
     * @param {module:api/FinancialProfileApi~getBalancePredictionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiResponseOfFinancialProfileBalancePrediction}
     */
    getBalancePrediction(userUuid, callback) {
      let postBody = null;
      // verify the required parameter 'userUuid' is set
      if (userUuid === undefined || userUuid === null) {
        throw new Error("Missing the required parameter 'userUuid' when calling getBalancePrediction");
      }

      let pathParams = {
        'userUuid': userUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiResponseOfFinancialProfileBalancePrediction;
      return this.apiClient.callApi(
        '/users/{userUuid}/profile/predicted-balances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProfileConsent operation.
     * @callback module:api/FinancialProfileApi~getProfileConsentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiResponseOfFinancialProfileConsent} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Profile Consent
     * Used to retreive a specific ProfileConsent for a User.
     * @param {String} userUuid __Mandatory__. The Yapily generated UUID for the user.
     * @param {String} profileConsentId __Mandatory__. The ID of the ProfileConsent
     * @param {module:api/FinancialProfileApi~getProfileConsentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiResponseOfFinancialProfileConsent}
     */
    getProfileConsent(userUuid, profileConsentId, callback) {
      let postBody = null;
      // verify the required parameter 'userUuid' is set
      if (userUuid === undefined || userUuid === null) {
        throw new Error("Missing the required parameter 'userUuid' when calling getProfileConsent");
      }
      // verify the required parameter 'profileConsentId' is set
      if (profileConsentId === undefined || profileConsentId === null) {
        throw new Error("Missing the required parameter 'profileConsentId' when calling getProfileConsent");
      }

      let pathParams = {
        'userUuid': userUuid,
        'profileConsentId': profileConsentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiResponseOfFinancialProfileConsent;
      return this.apiClient.callApi(
        '/users/{userUuid}/profile/consents/{profileConsentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUserProfile operation.
     * @callback module:api/FinancialProfileApi~getUserProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiResponseOfFinancialProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get User Profile
     * Used to retrieve a `FinancialProfile` for a `User`.  Status will be `PENDING` until all ProfileConsents are `COMPLETED`.
     * @param {String} userUuid __Mandatory__. The Yapily generated UUID for the user.
     * @param {module:api/FinancialProfileApi~getUserProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiResponseOfFinancialProfile}
     */
    getUserProfile(userUuid, callback) {
      let postBody = null;
      // verify the required parameter 'userUuid' is set
      if (userUuid === undefined || userUuid === null) {
        throw new Error("Missing the required parameter 'userUuid' when calling getUserProfile");
      }

      let pathParams = {
        'userUuid': userUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiResponseOfFinancialProfile;
      return this.apiClient.callApi(
        '/users/{userUuid}/profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
