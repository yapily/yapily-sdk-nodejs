/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountStatement model module.
 * @module model/AccountStatement
 * @version 2.13.1
 */
class AccountStatement {
    /**
     * Constructs a new <code>AccountStatement</code>.
     * Statement information belonging to the account.
     * @alias module:model/AccountStatement
     */
    constructor() { 
        
        AccountStatement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountStatement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountStatement} obj Optional instance to populate.
     * @return {module:model/AccountStatement} The populated <code>AccountStatement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountStatement();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('startDateTime')) {
                obj['startDateTime'] = ApiClient.convertToType(data['startDateTime'], 'Date');
            }
            if (data.hasOwnProperty('endDateTime')) {
                obj['endDateTime'] = ApiClient.convertToType(data['endDateTime'], 'Date');
            }
            if (data.hasOwnProperty('creationDateTime')) {
                obj['creationDateTime'] = ApiClient.convertToType(data['creationDateTime'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * Unique identifier for the statement.
 * @member {String} id
 */
AccountStatement.prototype['id'] = undefined;

/**
 * Date and time of when the statement period starts.
 * @member {Date} startDateTime
 */
AccountStatement.prototype['startDateTime'] = undefined;

/**
 * Date and time of when the statement period ends.
 * @member {Date} endDateTime
 */
AccountStatement.prototype['endDateTime'] = undefined;

/**
 * Date and time of when the statement was created.
 * @member {Date} creationDateTime
 */
AccountStatement.prototype['creationDateTime'] = undefined;






export default AccountStatement;

