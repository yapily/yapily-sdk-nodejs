/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressTypeEnum from './AddressTypeEnum';

/**
 * The Address model module.
 * @module model/Address
 * @version 2.13.1
 */
class Address {
    /**
     * Constructs a new <code>Address</code>.
     * __Conditional__. The address of the &#x60;Payee&#x60; or &#x60;Payer&#x60;.&lt;ul&gt;&lt;li&gt;&#x60;payee.address&#x60; is mandatory when the &#x60;paymentType&#x60; is an &#x60;INTERNATIONAL&#x60; payment&lt;/li&gt;&lt;li&gt;An &#x60;Institution&#x60; may require you to specify the &#x60;country&#x60; when used in the context ofthe &#x60;Payee&#x60; to be able to make a payment.&lt;/li&gt;&lt;/ul&gt;
     * @alias module:model/Address
     */
    constructor() { 
        
        Address.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Address</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Address} obj Optional instance to populate.
     * @return {module:model/Address} The populated <code>Address</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Address();

            if (data.hasOwnProperty('addressLines')) {
                obj['addressLines'] = ApiClient.convertToType(data['addressLines'], ['String']);
            }
            if (data.hasOwnProperty('streetName')) {
                obj['streetName'] = ApiClient.convertToType(data['streetName'], 'String');
            }
            if (data.hasOwnProperty('buildingNumber')) {
                obj['buildingNumber'] = ApiClient.convertToType(data['buildingNumber'], 'String');
            }
            if (data.hasOwnProperty('postCode')) {
                obj['postCode'] = ApiClient.convertToType(data['postCode'], 'String');
            }
            if (data.hasOwnProperty('townName')) {
                obj['townName'] = ApiClient.convertToType(data['townName'], 'String');
            }
            if (data.hasOwnProperty('county')) {
                obj['county'] = ApiClient.convertToType(data['county'], ['String']);
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('department')) {
                obj['department'] = ApiClient.convertToType(data['department'], 'String');
            }
            if (data.hasOwnProperty('subDepartment')) {
                obj['subDepartment'] = ApiClient.convertToType(data['subDepartment'], 'String');
            }
            if (data.hasOwnProperty('addressType')) {
                obj['addressType'] = AddressTypeEnum.constructFromObject(data['addressType']);
            }
        }
        return obj;
    }


}

/**
 * __Optional__. The address line of the address
 * @member {Array.<String>} addressLines
 */
Address.prototype['addressLines'] = undefined;

/**
 * __Optional__. The street name of the address
 * @member {String} streetName
 */
Address.prototype['streetName'] = undefined;

/**
 * __Optional__. The building number of the address
 * @member {String} buildingNumber
 */
Address.prototype['buildingNumber'] = undefined;

/**
 * __Optional__. The post code of the address
 * @member {String} postCode
 */
Address.prototype['postCode'] = undefined;

/**
 * __Optional__. The town name of the address
 * @member {String} townName
 */
Address.prototype['townName'] = undefined;

/**
 * __Optional__. The list of counties for the address
 * @member {Array.<String>} county
 */
Address.prototype['county'] = undefined;

/**
 * __Conditional__. The 2-letter country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment
 * @member {String} country
 */
Address.prototype['country'] = undefined;

/**
 * __Optional__. The department for the address
 * @member {String} department
 */
Address.prototype['department'] = undefined;

/**
 * __Optional__. The sub-department for the address
 * @member {String} subDepartment
 */
Address.prototype['subDepartment'] = undefined;

/**
 * @member {module:model/AddressTypeEnum} addressType
 */
Address.prototype['addressType'] = undefined;






export default Address;

