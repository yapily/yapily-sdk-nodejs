/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Categorisation from './Categorisation';
import EnrichmentMerchant from './EnrichmentMerchant';
import TransactionHash from './TransactionHash';

/**
 * The Enrichment model module.
 * @module model/Enrichment
 * @version 2.13.1
 */
class Enrichment {
    /**
     * Constructs a new <code>Enrichment</code>.
     * @alias module:model/Enrichment
     */
    constructor() { 
        
        Enrichment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Enrichment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Enrichment} obj Optional instance to populate.
     * @return {module:model/Enrichment} The populated <code>Enrichment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Enrichment();

            if (data.hasOwnProperty('categorisation')) {
                obj['categorisation'] = Categorisation.constructFromObject(data['categorisation']);
            }
            if (data.hasOwnProperty('transactionHash')) {
                obj['transactionHash'] = TransactionHash.constructFromObject(data['transactionHash']);
            }
            if (data.hasOwnProperty('cleansedDescription')) {
                obj['cleansedDescription'] = ApiClient.convertToType(data['cleansedDescription'], 'String');
            }
            if (data.hasOwnProperty('merchant')) {
                obj['merchant'] = EnrichmentMerchant.constructFromObject(data['merchant']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('paymentProcessor')) {
                obj['paymentProcessor'] = ApiClient.convertToType(data['paymentProcessor'], 'String');
            }
            if (data.hasOwnProperty('correctedDate')) {
                obj['correctedDate'] = ApiClient.convertToType(data['correctedDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Categorisation} categorisation
 */
Enrichment.prototype['categorisation'] = undefined;

/**
 * @member {module:model/TransactionHash} transactionHash
 */
Enrichment.prototype['transactionHash'] = undefined;

/**
 * @member {String} cleansedDescription
 */
Enrichment.prototype['cleansedDescription'] = undefined;

/**
 * @member {module:model/EnrichmentMerchant} merchant
 */
Enrichment.prototype['merchant'] = undefined;

/**
 * @member {String} location
 */
Enrichment.prototype['location'] = undefined;

/**
 * @member {String} paymentProcessor
 */
Enrichment.prototype['paymentProcessor'] = undefined;

/**
 * @member {Date} correctedDate
 */
Enrichment.prototype['correctedDate'] = undefined;






export default Enrichment;

