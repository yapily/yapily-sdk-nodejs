/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MultiAuthorisation model module.
 * @module model/MultiAuthorisation
 * @version 2.13.1
 */
class MultiAuthorisation {
    /**
     * Constructs a new <code>MultiAuthorisation</code>.
     * @alias module:model/MultiAuthorisation
     */
    constructor() { 
        
        MultiAuthorisation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultiAuthorisation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MultiAuthorisation} obj Optional instance to populate.
     * @return {module:model/MultiAuthorisation} The populated <code>MultiAuthorisation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultiAuthorisation();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('numberOfAuthorisationRequired')) {
                obj['numberOfAuthorisationRequired'] = ApiClient.convertToType(data['numberOfAuthorisationRequired'], 'Number');
            }
            if (data.hasOwnProperty('numberOfAuthorisationReceived')) {
                obj['numberOfAuthorisationReceived'] = ApiClient.convertToType(data['numberOfAuthorisationReceived'], 'Number');
            }
            if (data.hasOwnProperty('lastUpdatedDateTime')) {
                obj['lastUpdatedDateTime'] = ApiClient.convertToType(data['lastUpdatedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('expirationDateTime')) {
                obj['expirationDateTime'] = ApiClient.convertToType(data['expirationDateTime'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} status
 */
MultiAuthorisation.prototype['status'] = undefined;

/**
 * @member {Number} numberOfAuthorisationRequired
 */
MultiAuthorisation.prototype['numberOfAuthorisationRequired'] = undefined;

/**
 * @member {Number} numberOfAuthorisationReceived
 */
MultiAuthorisation.prototype['numberOfAuthorisationReceived'] = undefined;

/**
 * @member {Date} lastUpdatedDateTime
 */
MultiAuthorisation.prototype['lastUpdatedDateTime'] = undefined;

/**
 * @member {Date} expirationDateTime
 */
MultiAuthorisation.prototype['expirationDateTime'] = undefined;






export default MultiAuthorisation;

