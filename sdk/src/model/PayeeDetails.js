/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountIdentification from './AccountIdentification';

/**
 * The PayeeDetails model module.
 * @module model/PayeeDetails
 * @version 2.13.1
 */
class PayeeDetails {
    /**
     * Constructs a new <code>PayeeDetails</code>.
     * __Mandatory__. The &#x60;PayeeDetails&#x60; object contains details of the beneficiary [person or business]. You must define this in your payment request alongwith all of the nested mandatory properties.
     * @alias module:model/PayeeDetails
     * @param name {String} __Mandatory__. The account holder name of the beneficiary.
     * @param accountIdentifications {Array.<module:model/AccountIdentification>} __Mandatory__. The account identifications that identify the `Payee` bank account.
     * @param country {String} __Conditional__. The 2-letter country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment
     */
    constructor(name, accountIdentifications, country) { 
        
        PayeeDetails.initialize(this, name, accountIdentifications, country);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, accountIdentifications, country) { 
        obj['name'] = name;
        obj['accountIdentifications'] = accountIdentifications;
        obj['country'] = country;
    }

    /**
     * Constructs a <code>PayeeDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayeeDetails} obj Optional instance to populate.
     * @return {module:model/PayeeDetails} The populated <code>PayeeDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayeeDetails();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('accountIdentifications')) {
                obj['accountIdentifications'] = ApiClient.convertToType(data['accountIdentifications'], [AccountIdentification]);
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
        }
        return obj;
    }


}

/**
 * __Mandatory__. The account holder name of the beneficiary.
 * @member {String} name
 */
PayeeDetails.prototype['name'] = undefined;

/**
 * __Mandatory__. The account identifications that identify the `Payee` bank account.
 * @member {Array.<module:model/AccountIdentification>} accountIdentifications
 */
PayeeDetails.prototype['accountIdentifications'] = undefined;

/**
 * __Conditional__. The 2-letter country code for the address. <br><br>An `Institution` may require you to specify the `country` when used in the context of the `Payee` to be able to make a payment
 * @member {String} country
 */
PayeeDetails.prototype['country'] = undefined;






export default PayeeDetails;

