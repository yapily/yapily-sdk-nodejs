/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import PayeeDetails from './PayeeDetails';
import PayerDetails from './PayerDetails';
import RedirectRequest from './RedirectRequest';

/**
 * The PaymentPreAuthorisationRequest model module.
 * @module model/PaymentPreAuthorisationRequest
 * @version 2.13.1
 */
class PaymentPreAuthorisationRequest {
    /**
     * Constructs a new <code>PaymentPreAuthorisationRequest</code>.
     * __Mandatory__. The payment pre authorisation request object defining the details of the payment and pre auth.
     * @alias module:model/PaymentPreAuthorisationRequest
     * @param institutionId {String} __Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.
     * @param scope {String} __Mandatory__. Defines the scope of the pre-authorisation request.
     * @param payee {module:model/PayeeDetails} 
     * @param payer {module:model/PayerDetails} 
     * @param amount {module:model/Amount} 
     * @param reference {String} __Mandatory__. The payment reference or description. Limited to a maximum of 18 characters long.
     */
    constructor(institutionId, scope, payee, payer, amount, reference) { 
        
        PaymentPreAuthorisationRequest.initialize(this, institutionId, scope, payee, payer, amount, reference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, institutionId, scope, payee, payer, amount, reference) { 
        obj['institutionId'] = institutionId;
        obj['scope'] = scope;
        obj['payee'] = payee;
        obj['payer'] = payer;
        obj['amount'] = amount;
        obj['reference'] = reference;
    }

    /**
     * Constructs a <code>PaymentPreAuthorisationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentPreAuthorisationRequest} obj Optional instance to populate.
     * @return {module:model/PaymentPreAuthorisationRequest} The populated <code>PaymentPreAuthorisationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentPreAuthorisationRequest();

            if (data.hasOwnProperty('userUuid')) {
                obj['userUuid'] = ApiClient.convertToType(data['userUuid'], 'String');
            }
            if (data.hasOwnProperty('applicationUserId')) {
                obj['applicationUserId'] = ApiClient.convertToType(data['applicationUserId'], 'String');
            }
            if (data.hasOwnProperty('forwardParameters')) {
                obj['forwardParameters'] = ApiClient.convertToType(data['forwardParameters'], ['String']);
            }
            if (data.hasOwnProperty('institutionId')) {
                obj['institutionId'] = ApiClient.convertToType(data['institutionId'], 'String');
            }
            if (data.hasOwnProperty('callback')) {
                obj['callback'] = ApiClient.convertToType(data['callback'], 'String');
            }
            if (data.hasOwnProperty('redirect')) {
                obj['redirect'] = RedirectRequest.constructFromObject(data['redirect']);
            }
            if (data.hasOwnProperty('oneTimeToken')) {
                obj['oneTimeToken'] = ApiClient.convertToType(data['oneTimeToken'], 'Boolean');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('payee')) {
                obj['payee'] = PayeeDetails.constructFromObject(data['payee']);
            }
            if (data.hasOwnProperty('payer')) {
                obj['payer'] = PayerDetails.constructFromObject(data['payer']);
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = Amount.constructFromObject(data['amount']);
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} userUuid
 */
PaymentPreAuthorisationRequest.prototype['userUuid'] = undefined;

/**
 * __Conditional__. The user-friendly reference to the `User` that will authorise the authorisation request. If a `User` with the specified `applicationUserId` exists, it will be used otherwise, a new `User` with the specified `applicationUserId` will be created and used. Either the `userUuid` or `applicationUserId` must be provided.
 * @member {String} applicationUserId
 */
PaymentPreAuthorisationRequest.prototype['applicationUserId'] = undefined;

/**
 * @member {Array.<String>} forwardParameters
 */
PaymentPreAuthorisationRequest.prototype['forwardParameters'] = undefined;

/**
 * __Mandatory__. The reference to the `Institution` which identifies which institution the authorisation request is sent to.
 * @member {String} institutionId
 */
PaymentPreAuthorisationRequest.prototype['institutionId'] = undefined;

/**
 * __Optional__. The server to redirect the user to after the user complete the authorisation at the `Institution`. <br><br>See [Using a callback (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-optional) for more information.
 * @member {String} callback
 */
PaymentPreAuthorisationRequest.prototype['callback'] = undefined;

/**
 * @member {module:model/RedirectRequest} redirect
 */
PaymentPreAuthorisationRequest.prototype['redirect'] = undefined;

/**
 * __Conditional__. Used to receive a `oneTimeToken` rather than a `consentToken` at the `callback` for additional security. This can only be used when the `callback` is set. <br><br>See [Using a callback with an OTT (Optional)](https://docs.yapily.com/pages/knowledge/yapily-concepts/callback_url/#using-a-callback-with-an-ott-optional) for more information.
 * @member {Boolean} oneTimeToken
 */
PaymentPreAuthorisationRequest.prototype['oneTimeToken'] = undefined;

/**
 * __Mandatory__. Defines the scope of the pre-authorisation request.
 * @member {String} scope
 */
PaymentPreAuthorisationRequest.prototype['scope'] = undefined;

/**
 * @member {module:model/PayeeDetails} payee
 */
PaymentPreAuthorisationRequest.prototype['payee'] = undefined;

/**
 * @member {module:model/PayerDetails} payer
 */
PaymentPreAuthorisationRequest.prototype['payer'] = undefined;

/**
 * @member {module:model/Amount} amount
 */
PaymentPreAuthorisationRequest.prototype['amount'] = undefined;

/**
 * __Mandatory__. The payment reference or description. Limited to a maximum of 18 characters long.
 * @member {String} reference
 */
PaymentPreAuthorisationRequest.prototype['reference'] = undefined;






export default PaymentPreAuthorisationRequest;

