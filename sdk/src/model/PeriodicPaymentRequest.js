/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import FrequencyRequest from './FrequencyRequest';

/**
 * The PeriodicPaymentRequest model module.
 * @module model/PeriodicPaymentRequest
 * @version 2.13.1
 */
class PeriodicPaymentRequest {
    /**
     * Constructs a new <code>PeriodicPaymentRequest</code>.
     * __Conditional__. Used to specify properties to define a periodic payment. &lt;br&gt;&lt;br&gt;Must be specified when the payment &#x60;type&#x60; is one of the following:&lt;ul&gt;     &lt;li&gt;&lt;code&gt;DOMESTIC_PERIODIC_PAYMENT&lt;/code&gt;&lt;/li&gt;     &lt;li&gt;&lt;code&gt;INTERNATIONAL_PERIODIC_PAYMENT&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
     * @alias module:model/PeriodicPaymentRequest
     * @param frequency {module:model/FrequencyRequest} 
     */
    constructor(frequency) { 
        
        PeriodicPaymentRequest.initialize(this, frequency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, frequency) { 
        obj['frequency'] = frequency;
    }

    /**
     * Constructs a <code>PeriodicPaymentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PeriodicPaymentRequest} obj Optional instance to populate.
     * @return {module:model/PeriodicPaymentRequest} The populated <code>PeriodicPaymentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PeriodicPaymentRequest();

            if (data.hasOwnProperty('frequency')) {
                obj['frequency'] = FrequencyRequest.constructFromObject(data['frequency']);
            }
            if (data.hasOwnProperty('numberOfPayments')) {
                obj['numberOfPayments'] = ApiClient.convertToType(data['numberOfPayments'], 'Number');
            }
            if (data.hasOwnProperty('nextPaymentDateTime')) {
                obj['nextPaymentDateTime'] = ApiClient.convertToType(data['nextPaymentDateTime'], 'Date');
            }
            if (data.hasOwnProperty('nextPaymentAmount')) {
                obj['nextPaymentAmount'] = Amount.constructFromObject(data['nextPaymentAmount']);
            }
            if (data.hasOwnProperty('finalPaymentDateTime')) {
                obj['finalPaymentDateTime'] = ApiClient.convertToType(data['finalPaymentDateTime'], 'Date');
            }
            if (data.hasOwnProperty('finalPaymentAmount')) {
                obj['finalPaymentAmount'] = Amount.constructFromObject(data['finalPaymentAmount']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/FrequencyRequest} frequency
 */
PeriodicPaymentRequest.prototype['frequency'] = undefined;

/**
 * __Conditional__. Defines the total number of payments to be made.<br><br>This is required if `finalPaymentDateTime` is not specified and it is intended for the periodic payment have a fixed amount of payments.
 * @member {Number} numberOfPayments
 */
PeriodicPaymentRequest.prototype['numberOfPayments'] = undefined;

/**
 * __Conditional__. Defines when to start the recurring payment date and time. Specify this if you want the first payment to start on a different day than what the frequency object defines.
 * @member {Date} nextPaymentDateTime
 */
PeriodicPaymentRequest.prototype['nextPaymentDateTime'] = undefined;

/**
 * @member {module:model/Amount} nextPaymentAmount
 */
PeriodicPaymentRequest.prototype['nextPaymentAmount'] = undefined;

/**
 * __Conditional__. Defines the final payment date and time. To create an open-ended periodic payment, do not specify this property.
 * @member {Date} finalPaymentDateTime
 */
PeriodicPaymentRequest.prototype['finalPaymentDateTime'] = undefined;

/**
 * @member {module:model/Amount} finalPaymentAmount
 */
PeriodicPaymentRequest.prototype['finalPaymentAmount'] = undefined;






export default PeriodicPaymentRequest;

