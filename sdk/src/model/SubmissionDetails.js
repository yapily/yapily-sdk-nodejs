/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import Payee from './Payee';

/**
 * The SubmissionDetails model module.
 * @module model/SubmissionDetails
 * @version 2.13.1
 */
class SubmissionDetails {
    /**
     * Constructs a new <code>SubmissionDetails</code>.
     * __Mandatory__. The payment submission object defining the details of the payment instruction to be executed under the Variable Recurring Payment.
     * @alias module:model/SubmissionDetails
     * @param payee {module:model/Payee} 
     * @param paymentAmount {module:model/Amount} 
     */
    constructor(payee, paymentAmount) { 
        
        SubmissionDetails.initialize(this, payee, paymentAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, payee, paymentAmount) { 
        obj['payee'] = payee;
        obj['paymentAmount'] = paymentAmount;
    }

    /**
     * Constructs a <code>SubmissionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubmissionDetails} obj Optional instance to populate.
     * @return {module:model/SubmissionDetails} The populated <code>SubmissionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubmissionDetails();

            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('payee')) {
                obj['payee'] = Payee.constructFromObject(data['payee']);
            }
            if (data.hasOwnProperty('paymentAmount')) {
                obj['paymentAmount'] = Amount.constructFromObject(data['paymentAmount']);
            }
        }
        return obj;
    }


}

/**
 * __Optional__. The payment reference or description. Limited to a maximum of 18 characters long.
 * @member {String} reference
 */
SubmissionDetails.prototype['reference'] = undefined;

/**
 * @member {module:model/Payee} payee
 */
SubmissionDetails.prototype['payee'] = undefined;

/**
 * @member {module:model/Amount} paymentAmount
 */
SubmissionDetails.prototype['paymentAmount'] = undefined;






export default SubmissionDetails;

