/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InitiationDetails from './InitiationDetails';
import Payer from './Payer';
import PaymentStatus from './PaymentStatus';
import PaymentStatusDetails from './PaymentStatusDetails';
import RefundAccount from './RefundAccount';
import SubmissionDetails from './SubmissionDetails';

/**
 * The SubmissionResponse model module.
 * @module model/SubmissionResponse
 * @version 2.13.1
 */
class SubmissionResponse {
    /**
     * Constructs a new <code>SubmissionResponse</code>.
     * @alias module:model/SubmissionResponse
     * @param initiationDetails {module:model/InitiationDetails} 
     * @param submissionDetails {module:model/SubmissionDetails} 
     */
    constructor(initiationDetails, submissionDetails) { 
        
        SubmissionResponse.initialize(this, initiationDetails, submissionDetails);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, initiationDetails, submissionDetails) { 
        obj['initiationDetails'] = initiationDetails;
        obj['submissionDetails'] = submissionDetails;
    }

    /**
     * Constructs a <code>SubmissionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubmissionResponse} obj Optional instance to populate.
     * @return {module:model/SubmissionResponse} The populated <code>SubmissionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubmissionResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('paymentIdempotencyId')) {
                obj['paymentIdempotencyId'] = ApiClient.convertToType(data['paymentIdempotencyId'], 'String');
            }
            if (data.hasOwnProperty('institutionConsentId')) {
                obj['institutionConsentId'] = ApiClient.convertToType(data['institutionConsentId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = PaymentStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusDetails')) {
                obj['statusDetails'] = PaymentStatusDetails.constructFromObject(data['statusDetails']);
            }
            if (data.hasOwnProperty('initiationDetails')) {
                obj['initiationDetails'] = InitiationDetails.constructFromObject(data['initiationDetails']);
            }
            if (data.hasOwnProperty('submissionDetails')) {
                obj['submissionDetails'] = SubmissionDetails.constructFromObject(data['submissionDetails']);
            }
            if (data.hasOwnProperty('payer')) {
                obj['payer'] = Payer.constructFromObject(data['payer']);
            }
            if (data.hasOwnProperty('refundAccount')) {
                obj['refundAccount'] = RefundAccount.constructFromObject(data['refundAccount']);
            }
            if (data.hasOwnProperty('expectedExecutionTime')) {
                obj['expectedExecutionTime'] = ApiClient.convertToType(data['expectedExecutionTime'], 'Date');
            }
            if (data.hasOwnProperty('expectedSettlementTime')) {
                obj['expectedSettlementTime'] = ApiClient.convertToType(data['expectedSettlementTime'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
SubmissionResponse.prototype['id'] = undefined;

/**
 * @member {String} paymentIdempotencyId
 */
SubmissionResponse.prototype['paymentIdempotencyId'] = undefined;

/**
 * @member {String} institutionConsentId
 */
SubmissionResponse.prototype['institutionConsentId'] = undefined;

/**
 * @member {module:model/PaymentStatus} status
 */
SubmissionResponse.prototype['status'] = undefined;

/**
 * @member {module:model/PaymentStatusDetails} statusDetails
 */
SubmissionResponse.prototype['statusDetails'] = undefined;

/**
 * @member {module:model/InitiationDetails} initiationDetails
 */
SubmissionResponse.prototype['initiationDetails'] = undefined;

/**
 * @member {module:model/SubmissionDetails} submissionDetails
 */
SubmissionResponse.prototype['submissionDetails'] = undefined;

/**
 * @member {module:model/Payer} payer
 */
SubmissionResponse.prototype['payer'] = undefined;

/**
 * @member {module:model/RefundAccount} refundAccount
 */
SubmissionResponse.prototype['refundAccount'] = undefined;

/**
 * @member {Date} expectedExecutionTime
 */
SubmissionResponse.prototype['expectedExecutionTime'] = undefined;

/**
 * @member {Date} expectedSettlementTime
 */
SubmissionResponse.prototype['expectedSettlementTime'] = undefined;






export default SubmissionResponse;

