/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Amount from './Amount';
import SweepingPeriodicLimits from './SweepingPeriodicLimits';

/**
 * The SweepingControlParameters model module.
 * @module model/SweepingControlParameters
 * @version 2.13.1
 */
class SweepingControlParameters {
    /**
     * Constructs a new <code>SweepingControlParameters</code>.
     * Define the restrictions and limits for payment orders as part of Sweeping VRP consent
     * @alias module:model/SweepingControlParameters
     * @param psuAuthenticationMethods {Array.<String>} __Mandatory__. Defines the authentication method(s) allowed in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED].
     * @param periodicLimits {Array.<module:model/SweepingPeriodicLimits>} 
     * @param maxAmountPerPayment {module:model/Amount} __Mandatory__. Max amount that can be submitted per payment.
     */
    constructor(psuAuthenticationMethods, periodicLimits, maxAmountPerPayment) { 
        
        SweepingControlParameters.initialize(this, psuAuthenticationMethods, periodicLimits, maxAmountPerPayment);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, psuAuthenticationMethods, periodicLimits, maxAmountPerPayment) { 
        obj['psuAuthenticationMethods'] = psuAuthenticationMethods;
        obj['periodicLimits'] = periodicLimits;
        obj['maxAmountPerPayment'] = maxAmountPerPayment;
    }

    /**
     * Constructs a <code>SweepingControlParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SweepingControlParameters} obj Optional instance to populate.
     * @return {module:model/SweepingControlParameters} The populated <code>SweepingControlParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SweepingControlParameters();

            if (data.hasOwnProperty('psuAuthenticationMethods')) {
                obj['psuAuthenticationMethods'] = ApiClient.convertToType(data['psuAuthenticationMethods'], ['String']);
            }
            if (data.hasOwnProperty('periodicLimits')) {
                obj['periodicLimits'] = ApiClient.convertToType(data['periodicLimits'], [SweepingPeriodicLimits]);
            }
            if (data.hasOwnProperty('maxAmountPerPayment')) {
                obj['maxAmountPerPayment'] = ApiClient.convertToType(data['maxAmountPerPayment'], Amount);
            }
            if (data.hasOwnProperty('validFrom')) {
                obj['validFrom'] = ApiClient.convertToType(data['validFrom'], 'Date');
            }
            if (data.hasOwnProperty('validTo')) {
                obj['validTo'] = ApiClient.convertToType(data['validTo'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * __Mandatory__. Defines the authentication method(s) allowed in payment submission step. Allowed values are [SCA_REQUIRED, SCA_NOT_REQUIRED].
 * @member {Array.<String>} psuAuthenticationMethods
 */
SweepingControlParameters.prototype['psuAuthenticationMethods'] = undefined;

/**
 * @member {Array.<module:model/SweepingPeriodicLimits>} periodicLimits
 */
SweepingControlParameters.prototype['periodicLimits'] = undefined;

/**
 * __Mandatory__. Max amount that can be submitted per payment.
 * @member {module:model/Amount} maxAmountPerPayment
 */
SweepingControlParameters.prototype['maxAmountPerPayment'] = undefined;

/**
 * __Optional__. Start date when the consent becomes valid.
 * @member {Date} validFrom
 */
SweepingControlParameters.prototype['validFrom'] = undefined;

/**
 * __Optional__. End date when the consent expires and becomes invalid.
 * @member {Date} validTo
 */
SweepingControlParameters.prototype['validTo'] = undefined;






export default SweepingControlParameters;

