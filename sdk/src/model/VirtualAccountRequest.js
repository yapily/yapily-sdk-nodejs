/**
 * Yapily API
 * The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * The version of the OpenAPI document: 2.13.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VirtualAccountRequest model module.
 * @module model/VirtualAccountRequest
 * @version 2.13.1
 */
class VirtualAccountRequest {
    /**
     * Constructs a new <code>VirtualAccountRequest</code>.
     * @alias module:model/VirtualAccountRequest
     * @param nickname {String} Reference that can be provided in order to help with identification of the account
     * @param currency {String} Three-letter ISO 4217 currency code
     */
    constructor(nickname, currency) { 
        
        VirtualAccountRequest.initialize(this, nickname, currency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nickname, currency) { 
        obj['nickname'] = nickname;
        obj['currency'] = currency;
    }

    /**
     * Constructs a <code>VirtualAccountRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VirtualAccountRequest} obj Optional instance to populate.
     * @return {module:model/VirtualAccountRequest} The populated <code>VirtualAccountRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VirtualAccountRequest();

            if (data.hasOwnProperty('nickname')) {
                obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Reference that can be provided in order to help with identification of the account
 * @member {String} nickname
 */
VirtualAccountRequest.prototype['nickname'] = undefined;

/**
 * Three-letter ISO 4217 currency code
 * @member {String} currency
 */
VirtualAccountRequest.prototype['currency'] = undefined;






export default VirtualAccountRequest;

